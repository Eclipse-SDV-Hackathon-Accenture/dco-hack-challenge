stages:
- init
- build
- deploy
- release

workflow:
  rules:
  - if: $CI_COMMIT_TAG
    when: always
  - if: $CI_COMMIT_TITLE =~ /^release/
    when: never
  - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    when: never
  - when: always

variables:
  # TODO: adapt app name
  APP_NAME: release-management-service
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: /certs
  FF_GITLAB_REGISTRY_HELPER_IMAGE: 1
  APP_TM_HOST: temporal:7233

image: docker:20.10-git

services:
- name: docker:20.10-dind
  alias: docker
  command:
  - --tls=false
  - --tlsverify=false
  - --registry-mirror=http://docker.local

init:
  stage: init
  services: []
  variables:
    GIT_DEPTH: 0
    GIT_STRATEGY: clone
  script:
  - |
    [[ "${CI_COMMIT_TAG}" ]] && {
      export CI_VERSION="${CI_COMMIT_TAG}"
    }
    [[ "${CI_COMMIT_TAG}" ]] || {
      CI_LATEST_REV=$(git rev-list --tags --max-count=1)
      CI_LATEST_TAG=$(git describe --tags "${CI_LATEST_REV}" 2> /dev/null || echo 0.0.0)
      export CI_VERSION="${CI_LATEST_TAG}-rc-${CI_COMMIT_SHORT_SHA}"
    }
    {
      echo "APP_TAG=${CI_COMMIT_TAG}"
      echo "APP_BRANCH=${CI_COMMIT_REF_NAME}"
      echo "APP_VERSION=${CI_VERSION}"
    } >> .env && cat .env
  artifacts:
    paths:
    - .env
    reports:
      dotenv:
      - .env

build:
  stage: build
  needs: [init]
  dependencies: [init]
  image: conmob/docker:20.10-docker-compose-1.29.2
  variables:
    # APP_REDIS_HOST: redis
    # APP_REDIS_STREAMS_HOST: redis
    APP_POSTGRES_HOST: postgres
    APP_OAUTH2_ISSUER: http://keycloak:8000/auth/realms/default
    GIT_DEPTH: 0
    GIT_STRATEGY: clone
    SONAR_BRANCH: ${CI_COMMIT_REF_NAME}
    DEPENDENCY_TRACK_BRANCH: ${CI_COMMIT_REF_NAME}
    CONFLUENCE_BRANCH: ${CI_DEFAULT_BRANCH}
    # TODO: adapt confluence space key where documentation should be published
    CONFLUENCE_SPACE: DCO
    # TODO: adapt confluence ancestor id where documentation should be published
    CONFLUENCE_ANCESTOR: 42238876
  before_script:
  - source ./.bashrc
  script:
  - source ./10-build-app.sh &
  - source ./10-build-docs.sh &
  - for job in $(jobs -p); do wait "${job}"; done
  - source ./20-package-docker.sh &
  - source ./20-package-helm.sh &
  - for job in $(jobs -p); do wait "${job}"; done
  cache:
    paths:
    - ./.m2
  artifacts:
    when: always
    paths:
    - ./artifacts
    reports:
      junit:
      - ./**/target/surefire-reports/*.xml

eu-euc1-iat-dev:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: on_success
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
    - when: never
  environment:
    name: eu-euc1-iat-dev
  stage: deploy
  needs: [init, build]
  dependencies: [init]
  variables:
    APP_NAMESPACE: dco
    HELM_VALUES: ./chart/values-${CI_ENVIRONMENT_NAME}.yaml
  before_script:
    - source ./.bashrc
  script:
    - source ./30-deploy-helm.sh

release:
  rules:
  - if: $CI_COMMIT_TAG
    when: never
  - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    when: never
  - when: manual
    allow_failure: true
  stage: release
  needs: [init, build]
  image: node:16
  services: []
  variables:
    GIT_AUTHOR_NAME: release
    GIT_AUTHOR_EMAIL: noreply@release.automation
    GIT_COMMITTER_NAME: release
    GIT_COMMITTER_EMAIL: noreply@release.automation
  script:
  - npm install
  - npm run release
